openapi: 3.0.0
info:
  title: API RESTful - Trisog
  version: 1.0.0
  description: >-
    This project involves the development of a **RESTful API using Node.js and
    TypeScript**, with a focus on integrating **MongoDB** for database
    management. The API is designed to manage **touristic experiences**,
    allowing users to interact with data related to destinations, activities,
    bookings, and reviews.


    The API will enable users to perform essential operations such as creating,
    retrieving, updating, and deleting information about destinations and
    activities. Additionally, it will support booking management and user
    reviews for these experiences. Security and data privacy are key priorities,
    with robust authentication and authorization mechanisms implemented using
    **Firebase Authentication**.


    **Firebase Storage** is utilized for managing and storing user-uploaded
    images associated with experiences. **Docker** and **Docker Compose** are
    employed to ensure consistent and scalable deployment across different
    environments. **Jest** is used for unit and integration testing, ensuring
    the reliability and quality of the API.


    **Prisma** is used as the ORM tool to facilitate interaction with MongoDB,
    providing a robust and type-safe interface for database queries and data
    manipulation. This allows for efficient and secure data handling throughout
    the application.


    For API documentation, **Swagger UI** is integrated with the
    **'swagger-ui-express'** package in conjunction with **'swagger-jsdoc'** to
    automatically generate and maintain up-to-date documentation from source
    code annotations. This facilitates a clear understanding and ease of use for
    developers and users interacting with the API.


    Dependencies are managed with **Yarn**, providing a reliable and efficient
    way to handle project libraries. The project is deployed on **Vercel**,
    which ensures high performance and scalability for the API.


    In summary, this software aims to deliver a **comprehensive and secure API
    for managing touristic experiences**, ensuring a seamless user experience
    and effective management of data related to destinations and activities.
  license:
    name: MIT License
    url: https://github.com/ViniciusGR797/trisog-api/blob/master/LICENSE
components:
  securitySchemes:
    jwt:
      type: apiKey
      in: header
      name: Authorization
      description: To authenticate, pass the JWT token in the format **Bearer _token_**.
  schemas:
    CategoryList:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: Unique identifier for the category
          example: 60b8d295f1c0d2b0f1b2c3d8
        name:
          type: string
          description: Descriptive name of the category
          example: Adventure
    CategoryUpsert:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Descriptive name of the category
          example: Adventure
    DestinationList:
      type: array
      items:
        $ref: '#/components/schemas/Destination'
    Weather:
      type: object
      required:
        - jan_feb
        - mar_apr
        - may_jun
        - jul_aug
        - sep_oct
        - nov_dec
      properties:
        jan_feb:
          type: object
          properties:
            min:
              type: number
              description: Minimum temperature for January-February in degrees Celsius
              example: 10
            max:
              type: number
              description: Maximum temperature for January-February in degrees Celsius
              example: 16
        mar_apr:
          type: object
          properties:
            min:
              type: number
              description: Minimum temperature for March-April in degrees Celsius
              example: 12
            max:
              type: number
              description: Maximum temperature for March-April in degrees Celsius
              example: 18
        may_jun:
          type: object
          properties:
            min:
              type: number
              description: Minimum temperature for May-June in degrees Celsius
              example: 15
            max:
              type: number
              description: Maximum temperature for May-June in degrees Celsius
              example: 22
        jul_aug:
          type: object
          properties:
            min:
              type: number
              description: Minimum temperature for July-August in degrees Celsius
              example: 18
            max:
              type: number
              description: Maximum temperature for July-August in degrees Celsius
              example: 25
        sep_oct:
          type: object
          properties:
            min:
              type: number
              description: Minimum temperature for September-October in degrees Celsius
              example: 14
            max:
              type: number
              description: Maximum temperature for September-October in degrees Celsius
              example: 20
        nov_dec:
          type: object
          properties:
            min:
              type: number
              description: Minimum temperature for November-December in degrees Celsius
              example: 10
            max:
              type: number
              description: Maximum temperature for November-December in degrees Celsius
              example: 16
    Destination:
      type: object
      required:
        - id
        - name
        - about
        - country
        - continent
        - map_link
        - weather
        - language
        - currency
        - area
        - population
        - time_zone
        - time_to_travel
        - images
      properties:
        id:
          type: string
          description: Unique identifier for the destination
          example: 63f47adf2d7e6b04e4f978c7
        name:
          type: string
          description: Name of the destination
          example: France
        about:
          type: string
          description: Description of the destination
          example: >-
            The capital city of France is Paris, known for its rich history,
            art, and culture. The Eiffel Tower is one of its most iconic
            landmarks.
        continent:
          type: string
          description: >-
            Continent where the destination is located, valid options are
            Africa, America, Antarctica, Asia, Europe, Oceania
          example: Europe
        map_link:
          type: string
          description: Google Maps URL for the destination
          example: https://www.google.com/maps/place/Paris
        weather:
          type: object
          $ref: '#/components/schemas/Weather'
        language:
          type: array
          items:
            type: string
          description: Array of languages spoken at the destination
          example:
            - French
        currency:
          type: string
          description: Currency used in the destination
          example: Euro
        area:
          type: integer
          description: Area of the destination in square miles
          example: 551695
        population:
          type: integer
          description: Population of the destination in number of inhabitants
          example: 65273511
        time_zone:
          type: string
          description: Time zone of the destination
          example: UTC+1
        time_to_travel:
          type: array
          items:
            type: string
          description: >-
            Best months to travel to the destination, valid options are Jan,
            Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec
          example:
            - Jan
            - Feb
            - Mar
        images:
          type: array
          items:
            type: string
          description: Array of image URLs related to the destination
          example:
            - https://example.com/image1.jpg
            - https://example.com/image2.jpg
        travel_count:
          type: integer
          description: >-
            The number of travels, tours, or activities available at the
            destination
          example: 5
    DestinationUpsert:
      type: object
      required:
        - name
        - about
        - country
        - continent
        - map_link
        - weather
        - language
        - currency
        - area
        - population
        - time_zone
        - time_to_travel
        - image
      properties:
        name:
          type: string
          description: Name of the destination
          example: France
        about:
          type: string
          description: Description of the destination
          example: >-
            The capital city of France is Paris, known for its rich history,
            art, and culture. The Eiffel Tower is one of its most iconic
            landmarks.
        continent:
          type: string
          description: >-
            Continent where the destination is located, valid options are
            Africa, America, Antarctica, Asia, Europe, Oceania
          example: Europe
        map_link:
          type: string
          description: Google Maps URL for the destination
          example: https://www.google.com/maps/place/Paris
        weather:
          type: object
          $ref: '#/components/schemas/Weather'
        language:
          type: array
          items:
            type: string
          description: Array of languages spoken at the destination
          example:
            - French
        currency:
          type: string
          description: Currency used in the destination
          example: Euro
        area:
          type: integer
          description: Area of the destination in square miles
          example: 551695
        population:
          type: integer
          description: Population of the destination in number of inhabitants
          example: 65273511
        time_zone:
          type: string
          description: Time zone of the destination
          example: UTC+1
        time_to_travel:
          type: array
          items:
            type: string
          description: >-
            Best months to travel to the destination, valid options are Jan,
            Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec
          example:
            - Jan
            - Feb
            - Mar
        image:
          type: string
          description: Image URL related to the destination
          example: https://example.com/image1.jpg
    DestinationUpsertExtended:
      type: object
      required:
        - name
        - about
        - country
        - continent
        - map_link
        - weather
        - language
        - currency
        - area
        - population
        - time_zone
        - time_to_travel
        - images
        - travel_count
      properties:
        name:
          type: string
          description: Name of the destination
          example: France
        about:
          type: string
          description: Description of the destination
          example: >-
            The capital city of France is Paris, known for its rich history,
            art, and culture. The Eiffel Tower is one of its most iconic
            landmarks.
        continent:
          type: string
          description: >-
            Continent where the destination is located, valid options are
            Africa, America, Antarctica, Asia, Europe, Oceania
          example: Europe
        map_link:
          type: string
          description: Google Maps URL for the destination
          example: https://www.google.com/maps/place/Paris
        weather:
          type: object
          $ref: '#/components/schemas/Weather'
        language:
          type: array
          items:
            type: string
          description: Array of languages spoken at the destination
          example:
            - French
        currency:
          type: string
          description: Currency used in the destination
          example: Euro
        area:
          type: integer
          description: Area of the destination in square miles
          example: 551695
        population:
          type: integer
          description: Population of the destination in number of inhabitants
          example: 65273511
        time_zone:
          type: string
          description: Time zone of the destination
          example: UTC+1
        time_to_travel:
          type: array
          items:
            type: string
          description: >-
            Best months to travel to the destination, valid options are Jan,
            Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec
          example:
            - Jan
            - Feb
            - Mar
        image:
          type: string
          description: Image URL related to the destination
          example: https://example.com/image1.jpg
        images:
          type: array
          items:
            type: string
          description: Array of image URLs related to the destination
          example:
            - https://example.com/image1.jpg
            - https://example.com/image2.jpg
        travel_count:
          type: integer
          description: >-
            The number of travels, tours, or activities available at the
            destination
          example: 5
    ExperienceList:
      type: array
      items:
        $ref: '#/components/schemas/Experience'
    CustomPrice:
      type: object
      required:
        - date
        - price
      properties:
        date:
          type: string
          format: date
          description: The date for which the price is specified.
          example: '2024-08-01'
        price:
          type: number
          format: float
          description: The price for the specified date.
          example: 120
    Experience:
      type: object
      required:
        - id
        - name
        - city
        - image
        - video
        - gallery
        - map_link
        - start_date
        - end_date
        - duration
        - is_activity
        - max_people
        - min_age
        - over_view
        - include
        - exclude
        - rating
        - default_price
        - categories
        - plans
        - destination_id
      properties:
        id:
          type: string
          description: Unique identifier for the experience
          example: 63f47adf2d7e6b04e4f978c7
        name:
          type: string
          description: Name of the experience
          example: City Tour
        city:
          type: string
          description: City where the experience takes place
          example: New York
        image:
          type: string
          description: URL to an image representing the experience
          example: https://example.com/image.jpg
        video:
          type: string
          description: URL to a video related to the experience
          example: https://example.com/video.mp4
        gallery:
          type: string
          description: URL to a gallery related to the experience
          example: https://example.com/gallery
        map_link:
          type: string
          description: URL to the map location of the experience
          example: https://example.com/map
        start_date:
          type: string
          format: date-time
          description: Start date of the availability period YYYY-MM-DD
          example: '2024-03-24'
        end_date:
          type: string
          format: date-time
          description: End date of the availability period YYYY-MM-DD
          example: '2024-03-24'
        duration:
          type: number
          description: Duration of the experience
          example: 24
        is_activity:
          type: boolean
          description: Indicates if the experience is an activity
          example: false
        max_people:
          type: integer
          description: Maximum number of people allowed for the experience
          example: 30
        min_age:
          type: integer
          description: Minimum age required for participation in the experience
          example: 18
        over_view:
          type: string
          description: Overview of the experience
          example: A comprehensive tour of the city with stops at major landmarks.
        include:
          type: array
          items:
            type: string
          description: List of items included in the experience
          example:
            - Lunch
            - Guide
        exclude:
          type: array
          items:
            type: string
          description: List of items excluded from the experience
          example:
            - Transportation
        rating:
          type: number
          description: Average rating score for the experience
          example: 4.5
        default_price:
          type: number
          description: The default price applied when no custom price is specified
          example: 4.5
        custom_prices:
          type: array
          description: An array of custom prices for specific dates
          items:
            $ref: '#/components/schemas/CustomPrice'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
        destination_id:
          type: string
          description: ID of the destination associated with the experience
          example: 63f47adf2d7e6b04e4f978c7
    ExperienceRaw:
      type: >-
        object - id - name - city - image - video - gallery - map_link -
        start_date - end_date - duration - is_activity - max_people - min_age -
        over_view - include - exclude - rating - default_price - custom_prices -
        categories_id - plans_id - destination_id
      properties:
        id:
          type: string
          description: Unique identifier for the experience
          example: 63f47adf2d7e6b04e4f978c7
        name:
          type: string
          description: Name of the experience
          example: City Tour
        city:
          type: string
          description: City where the experience takes place
          example: New York
        image:
          type: string
          description: URL to an image representing the experience
          example: https://example.com/image.jpg
        video:
          type: string
          description: URL to a video related to the experience
          example: https://example.com/video.mp4
        gallery:
          type: string
          description: URL to a gallery related to the experience
          example: https://example.com/gallery
        map_link:
          type: string
          description: URL to the map location of the experience
          example: https://example.com/map
        start_date:
          type: string
          format: date-time
          description: Start date of the availability period YYYY-MM-DD
          example: '2024-03-24'
        end_date:
          type: string
          format: date-time
          description: End date of the availability period YYYY-MM-DD
          example: '2024-03-24'
        duration:
          type: number
          description: Duration of the experience
          example: 24
        is_activity:
          type: boolean
          description: Indicates if the experience is an activity
          example: false
        max_people:
          type: integer
          description: Maximum number of people allowed for the experience
          example: 30
        min_age:
          type: integer
          description: Minimum age required for participation in the experience
          example: 18
        over_view:
          type: string
          description: Overview of the experience
          example: A comprehensive tour of the city with stops at major landmarks.
        include:
          type: array
          items:
            type: string
          description: List of items included in the experience
          example:
            - Lunch
            - Guide
        exclude:
          type: array
          items:
            type: string
          description: List of items excluded from the experience
          example:
            - Transportation
        rating:
          type: number
          description: Average rating score for the experience
          example: 4.5
        default_price:
          type: number
          description: The default price applied when no custom price is specified
          example: 4.5
        custom_prices:
          type: array
          description: An array of custom prices for specific dates
          items:
            $ref: '#/components/schemas/CustomPrice'
        categories_id:
          type: array
          items:
            type: string
            description: List of category IDs associated with the experience
          description: List of category IDs associated with the experience
          example:
            - 60b8d295f1c0d2b0f1b2c3d4
            - 60b8d295f1c0d2b0f1b2c3d5
        plans_id:
          type: array
          items:
            type: string
          description: List of plan IDs associated with the experience
          example:
            - 60b8d295f1c0d2b0f1b2c3d6
            - 60b8d295f1c0d2b0f1b2c3d7
        destination_id:
          type: string
          description: ID of the destination associated with the experience
          example: 63f47adf2d7e6b04e4f978c7
    ExperienceUpsert:
      type: object
      required:
        - name
        - city
        - image
        - video
        - gallery
        - map_link
        - start_date
        - end_date
        - duration
        - is_activity
        - max_people
        - min_age
        - over_view
        - include
        - exclude
        - default_price
        - categories_id
        - plans_id
        - destination_id
      properties:
        name:
          type: string
          description: Name of the experience
          example: City Tour
        city:
          type: string
          description: City where the experience takes place
          example: New York
        image:
          type: string
          description: URL to an image representing the experience
          example: https://example.com/image.jpg
        video:
          type: string
          description: URL to a video related to the experience
          example: https://example.com/video.mp4
        gallery:
          type: string
          description: URL to a gallery related to the experience
          example: https://example.com/gallery
        map_link:
          type: string
          description: URL to the map location of the experience
          example: https://example.com/map
        start_date:
          type: string
          format: date-time
          description: Start date of the availability period YYYY-MM-DD
          example: '2024-03-24'
        end_date:
          type: string
          format: date-time
          description: End date of the availability period YYYY-MM-DD
          example: '2024-03-24'
        duration:
          type: number
          description: Duration of the experience
          example: 24
        is_activity:
          type: boolean
          description: Indicates if the experience is an activity
          example: false
        max_people:
          type: integer
          description: Maximum number of people allowed for the experience
          example: 30
        min_age:
          type: integer
          description: Minimum age required for participation in the experience
          example: 18
        over_view:
          type: string
          description: Overview of the experience
          example: A comprehensive tour of the city with stops at major landmarks.
        include:
          type: array
          items:
            type: string
          description: List of items included in the experience
          example:
            - Lunch
            - Guide
        exclude:
          type: array
          items:
            type: string
          description: List of items excluded from the experience
          example:
            - Transportation
        default_price:
          type: number
          description: The default price applied when no custom price is specified
          example: 4.5
        custom_prices:
          type: array
          description: An array of custom prices for specific dates
          items:
            $ref: '#/components/schemas/CustomPrice'
        categories_id:
          type: array
          items:
            type: string
            description: List of category IDs associated with the experience
          description: List of category IDs associated with the experience
          example:
            - 60b8d295f1c0d2b0f1b2c3d4
            - 60b8d295f1c0d2b0f1b2c3d5
        plans_id:
          type: array
          items:
            type: string
          description: List of plan IDs associated with the experience
          example:
            - 60b8d295f1c0d2b0f1b2c3d6
            - 60b8d295f1c0d2b0f1b2c3d7
        destination_id:
          type: string
          description: ID of the destination associated with the experience
          example: 63f47adf2d7e6b04e4f978c7
    ExperienceUpsertExtended:
      type: >-
        object - name - city - image - video - gallery - map_link - start_date -
        end_date - duration - is_activity - max_people - min_age - over_view -
        include - exclude - default_price - custom_prices - categories_id -
        plans_id - destination_id
      properties:
        name:
          type: string
          description: Name of the experience
          example: City Tour
        city:
          type: string
          description: City where the experience takes place
          example: New York
        image:
          type: string
          description: URL to an image representing the experience
          example: https://example.com/image.jpg
        video:
          type: string
          description: URL to a video related to the experience
          example: https://example.com/video.mp4
        gallery:
          type: string
          description: URL to a gallery related to the experience
          example: https://example.com/gallery
        map_link:
          type: string
          description: URL to the map location of the experience
          example: https://example.com/map
        start_date:
          type: string
          format: date-time
          description: Start date of the availability period YYYY-MM-DD
          example: '2024-03-24'
        end_date:
          type: string
          format: date-time
          description: End date of the availability period YYYY-MM-DD
          example: '2024-03-24'
        duration:
          type: number
          description: Duration of the experience
          example: 24
        is_activity:
          type: boolean
          description: Indicates if the experience is an activity
          example: false
        max_people:
          type: integer
          description: Maximum number of people allowed for the experience
          example: 30
        min_age:
          type: integer
          description: Minimum age required for participation in the experience
          example: 18
        over_view:
          type: string
          description: Overview of the experience
          example: A comprehensive tour of the city with stops at major landmarks.
        include:
          type: array
          items:
            type: string
          description: List of items included in the experience
          example:
            - Lunch
            - Guide
        exclude:
          type: array
          items:
            type: string
          description: List of items excluded from the experience
          example:
            - Transportation
        rating:
          type: number
          description: Average rating score for the experience
          example: 4.5
        default_price:
          type: number
          description: The default price applied when no custom price is specified
          example: 4.5
        custom_prices:
          type: array
          description: An array of custom prices for specific dates
          items:
            $ref: '#/components/schemas/CustomPrice'
        categories_id:
          type: array
          items:
            type: string
            description: List of category IDs associated with the experience
          description: List of category IDs associated with the experience
          example:
            - 60b8d295f1c0d2b0f1b2c3d4
            - 60b8d295f1c0d2b0f1b2c3d5
        plans_id:
          type: array
          items:
            type: string
          description: List of plan IDs associated with the experience
          example:
            - 60b8d295f1c0d2b0f1b2c3d6
            - 60b8d295f1c0d2b0f1b2c3d7
        destination_id:
          type: string
          description: ID of the destination associated with the experience
          example: 63f47adf2d7e6b04e4f978c7
    PlanList:
      type: array
      items:
        $ref: '#/components/schemas/Plan'
    Plan:
      type: object
      required:
        - id
        - time
        - title
        - description
        - topics
      properties:
        id:
          type: string
          description: Unique identifier for the plan
          example: 60b8d295f1c0d2b0f1b2c3d6
        time:
          type: string
          description: Time associated with the plan
          example: '2024-08-26T14:30:00Z'
        title:
          type: string
          description: Title of the plan
          example: City Tour
        description:
          type: string
          description: Description of the plan
          example: A detailed tour around the city's historical landmarks.
        topics:
          type: array
          items:
            type: string
          description: List of topics covered in the plan
          example:
            - History
            - Architecture
            - Culture
    PlanUpsert:
      type: object
      required:
        - time
        - title
        - description
        - topics
      properties:
        time:
          type: string
          description: Time associated with the plan
          example: '2024-08-26T14:30:00Z'
        title:
          type: string
          description: Title of the plan
          example: City Tour
        description:
          type: string
          description: Description of the plan
          example: A detailed tour around the city's historical landmarks.
        topics:
          type: array
          items:
            type: string
          description: List of topics covered in the plan
          example:
            - History
            - Architecture
            - Culture
    DeleteSuccess:
      type: object
      properties:
        msg:
          type: string
          description: Delete success message
          example: Successfully deleted
    BadRequest:
      type: object
      properties:
        msg:
          type: string
          description: Invalid request. Some parameters may be missing or invalid.
          example: Some parameters may be missing or invalid
    Unauthorized:
      type: object
      properties:
        msg:
          type: string
          description: Unauthorized. The JWT token was not provided or is invalid.
          example: JWT token not provided or invalid
    Forbidden:
      type: object
      properties:
        msg:
          type: string
          description: >-
            Forbidden. The user does not have permission to access the requested
            resource.
          example: You do not have permission to access the requested resource
    NotFound:
      type: object
      properties:
        msg:
          type: string
          description: No data found. The requested resource does not exist
          example: No data found
    InternalServerError:
      type: object
      properties:
        msg:
          type: string
          description: Internal error when handling data in the service
          example: Internal Server Error
    ReviewList:
      type: array
      items:
        $ref: '#/components/schemas/Review'
    Review:
      type: object
      required:
        - id
        - name
        - email
        - comment
        - image
        - score
        - created_at
        - experience_id
      properties:
        id:
          type: string
          description: Unique identifier for the review
          example: 60b8d295f1c0d2b0f1b2c3d8
        name:
          type: string
          description: Name of the person who wrote the review
          example: John Doe
        email:
          type: string
          description: Email address of the person who wrote the review
          example: johndoe@example.com
        comment:
          type: string
          description: The content of the review
          example: The tour was fantastic and exceeded my expectations!
        image:
          type: string
          description: URL to an image related to the review
          example: https://example.com/review-image.jpg
        score:
          type: integer
          format: int32
          description: Rating score given by the reviewer, typically on a scale of 1 to 5
          example: 5
        created_at:
          type: string
          format: date-time
          description: The date and time when the review was created
          example: '2024-08-27T14:30:00Z'
        experience_id:
          type: string
          description: Unique identifier for the experience being reviewed
          example: 60b8d295f1c0d2b0f1b2c3d9
    ReviewUpsert:
      type: object
      required:
        - name
        - email
        - comment
        - image
        - score
        - experience_id
      properties:
        name:
          type: string
          description: Name of the person who wrote the review
          example: John Doe
        email:
          type: string
          description: Email address of the person who wrote the review
          example: johndoe@example.com
        comment:
          type: string
          description: The content of the review
          example: The tour was fantastic and exceeded my expectations!
        image:
          type: string
          description: URL to an image related to the review
          example: https://example.com/review-image.jpg
        score:
          type: integer
          format: int32
          description: Rating score given by the reviewer, typically on a scale of 1 to 5
          example: 5
        experience_id:
          type: string
          description: Unique identifier for the experience being reviewed
          example: 60b8d295f1c0d2b0f1b2c3d9
paths:
  /categories:
    get:
      summary: View all categories
      description: Returns information about all categories
      tags:
        - Category
      operationId: get_all_categories
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryList'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      summary: Create a new category
      description: Creates a new category based on the data provided in the request body.
      tags:
        - Category
      operationId: create_category
      security:
        - jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpsert'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /categories/{category_id}:
    parameters:
      - name: category_id
        in: path
        required: true
        description: ID of the category to be deleted
        schema:
          type: string
    get:
      summary: View category by id
      description: Returns category information by id
      tags:
        - Category
      operationId: get_category_by_id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      summary: Update category
      description: Updates the information of the desired category
      tags:
        - Category
      operationId: update_category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpsert'
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Remove category
      description: Deletes a category based on the ID provided
      tags:
        - Category
      operationId: delete_category
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSuccess'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /destinations:
    get:
      summary: View all destinations
      description: Returns information about all destinations
      tags:
        - Destination
      operationId: get_all_destinations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationList'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      summary: Create a new destination
      description: >-
        Creates a new destination based on the data provided in the request
        body.
      tags:
        - Destination
      operationId: create_destination
      security:
        - jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpsert'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /destinations/{destination_id}:
    parameters:
      - name: destination_id
        in: path
        required: true
        description: ID of the destination to be deleted
        schema:
          type: string
    get:
      summary: View destination by id
      description: Returns destination information by id
      tags:
        - Destination
      operationId: get_destination_by_id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      summary: Update destination
      description: Updates the information of the desired destination
      tags:
        - Destination
      operationId: update_destination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpsert'
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Remove destination
      description: Deletes a destination based on the ID provided
      tags:
        - Destination
      operationId: delete_destination
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSuccess'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /experiences:
    get:
      summary: View all experiences
      description: Returns information about all experiences
      tags:
        - Experience
      operationId: get_all_experiences
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceList'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      summary: Create a new experience
      description: Creates a new experience based on the data provided in the request body.
      tags:
        - Experience
      operationId: create_experience
      security:
        - jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperienceUpsert'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /experiences/{experience_id}:
    parameters:
      - name: experience_id
        in: path
        required: true
        description: ID of the experience to be deleted
        schema:
          type: string
    get:
      summary: View experience by id
      description: Returns experience information by id
      tags:
        - Experience
      operationId: get_experience_by_id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      summary: Update experience
      description: Updates the information of the desired experience
      tags:
        - Experience
      operationId: update_experience
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperienceUpsert'
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Remove experience
      description: Deletes a experience based on the ID provided
      tags:
        - Experience
      operationId: delete_experience
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSuccess'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /plans:
    get:
      summary: View all plans
      description: Returns information about all plans
      tags:
        - Plan
      operationId: get_all_plans
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanList'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      summary: Create a new plan
      description: Creates a new plan based on the data provided in the request body.
      tags:
        - Plan
      operationId: create_plan
      security:
        - jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanUpsert'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /plans/{plan_id}:
    parameters:
      - name: plan_id
        in: path
        required: true
        description: ID of the plan to be deleted
        schema:
          type: string
    get:
      summary: View plan by id
      description: Returns plan information by id
      tags:
        - Plan
      operationId: get_plan_by_id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      summary: Update plan
      description: Updates the information of the desired plan
      tags:
        - Plan
      operationId: update_plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanUpsert'
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Remove plan
      description: Deletes a plan based on the ID provided
      tags:
        - Plan
      operationId: delete_plan
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSuccess'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /reviews:
    get:
      summary: View all reviews
      description: Returns information about all reviews
      tags:
        - Review
      operationId: get_all_reviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewList'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      summary: Create a new review
      description: Creates a new review based on the data provided in the request body.
      tags:
        - Review
      operationId: create_review
      security:
        - jwt: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpsert'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /reviews/{review_id}:
    parameters:
      - name: review_id
        in: path
        required: true
        description: ID of the review to be deleted
        schema:
          type: string
    get:
      summary: View review by id
      description: Returns review information by id
      tags:
        - Review
      operationId: get_review_by_id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      summary: Update review
      description: Updates the information of the desired review
      tags:
        - Review
      operationId: update_review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpsert'
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Remove review
      description: Deletes a review based on the ID provided
      tags:
        - Review
      operationId: delete_review
      security:
        - jwt: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSuccess'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
tags:
  - name: Category
    description: Routes for category manipulation
  - name: Destination
    description: Routes for destination manipulation
  - name: Experience
    description: Routes for experience manipulation
  - name: Plan
    description: Routes for plan manipulation
  - name: Review
    description: Routes for review manipulation
